<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.number-nagar</groupId>
	<artifactId>web</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>Number nagar middle layer</name>
	<description>	</description>
	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<postgres.user.name>postgres</postgres.user.name>
				<postgres.db>nn</postgres.db>
				<postgres.password>nnpassword</postgres.password>
				<postgres.port>5432</postgres.port>
				<postgres.hostname>db.postgres.com</postgres.hostname>
				<ddl.option>create-drop</ddl.option>
				<wildfly.deployment.dir>/opt/jboss/wildfly/standalone/deployments/</wildfly.deployment.dir>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<ddl.option>validate</ddl.option>
			</properties>
			<activation>
				<property>
					<name>env</name>
					<value>prod</value>
				</property>
			</activation>
		</profile>
	</profiles>
	<properties>
		<spring.version>5.0.1.RELEASE</spring.version>
		<jdk.version>1.8</jdk.version>
		<jackson.version>2.9.2</jackson.version>
		<jaxb.version>2.3.0</jaxb.version>
		<logback.version>1.2.3</logback.version>
		<jcl.slf4j.version>1.7.25</jcl.slf4j.version>
		<servletapi.version>3.1.0</servletapi.version>
		<postgres.version>9.1-901-1.jdbc4</postgres.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api -->
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>${jaxb.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${servletapi.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${jcl.slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework.data/spring-data-rest-webmvc -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-rest-webmvc</artifactId>
			<version>3.0.0.RELEASE</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework.data/spring-data-jpa -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>2.0.0.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>5.2.12.Final</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.postgresql/postgresql -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.1.4</version>
		</dependency>
	</dependencies>
	<build>
		<finalName>nn-web</finalName>
		<resources>
			<resource>
				<directory>/opt/workspace/gitrepo/nn-web/src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>/opt/workspace/gitrepo/nn-web/src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.20.1</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.0.2</version>
				<executions>
					<execution>
						<id>copy</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<artifactItems>
						<artifactItem>
							<groupId>${project.groupId}</groupId>
							<artifactId>${project.artifactId}</artifactId>
							<version>${project.version}</version>
							<type>${project.packaging}</type>
							<destFileName>${project.build.finalName}.${project.packaging}</destFileName>
						</artifactItem>
					</artifactItems>
					<outputDirectory>target/test-classes/wildfly/deployments</outputDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.23.0</version>
				<executions>
					<execution>
						<id>prepare-postgres-db</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
						<configuration>
							<images>
								<image>
									<name>postgres:10</name>
									<alias>postgres</alias>
									<build>
										<dockerFileDir>${project.build.testoutputDirectory}/postgres</dockerFileDir>
									</build>
									<run>
										<namingStrategy>alias</namingStrategy>
										<dependsOn />
										<ports>
											<port>5432:5432</port>
										</ports>
										<log>
											<prefix>POSTGRES::</prefix>
											<date>default</date>
											<color>cyan</color>
										</log>
										<wait>
											<tcp>
												<ports>
													<port>5432</port>
												</ports>
											</tcp>
										</wait>
									</run>
								</image>
								<image>
									<name>jboss/wildfly:10.1.0.Final</name>
									<alias>wildfly</alias>
									<build>
										<dockerFileDir>${project.build.testoutputDirectory}/wildfly</dockerFileDir>
									</build>
									<run>
										<namingStrategy>alias</namingStrategy>
										<volumes>
											<bind>
												<volume>${project.build.testoutputDirectory}/wildfly/deployments:/mnt</volume>
											</bind>
										</volumes>
										<dependsOn>
											<container>${postgres.hostname}</container>
										</dependsOn>
										<links>
											<link>postgres:${postgres.hostname}</link>
										</links>
										<ports>
											<port>8080:8080</port>
										</ports>
										<log>
											<prefix>WILDFLY::</prefix>
											<date>default</date>
											<color>yellow</color>
										</log>
										<wait>
											<http>
												<url>http://localhost:8080/</url>
											</http>
											<exec>
											<postStart>cp /mnt/nn-web.war ${wildfly.deployment.dir}</postStart>
											</exec>
										</wait>
									</run>
								</image>
							</images>
						</configuration>
					</execution>
					<execution>
						<id>remove-containers</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
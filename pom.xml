<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.number-nagar</groupId>
	<artifactId>web</artifactId>
	<version>0.1</version>
	<packaging>war</packaging>
	<name>Number nagar middle layer</name>
	<description>	</description>
	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<postgres.user.name>postgres</postgres.user.name>
				<postgres.db>nn</postgres.db>
				<postgres.password>nnpassword</postgres.password>
				<postgres.port>5432</postgres.port>
				<postgres.hostname>postgres.db</postgres.hostname>
				<ddl.option>create-drop</ddl.option>
				<wildfly.deployment.dir>/opt/jboss/wildfly/standalone/deployments/</wildfly.deployment.dir>
				<cucumber.options>--plugin html:target/cucumber</cucumber.options>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<ddl.option>validate</ddl.option>
			</properties>
			<activation>
				<property>
					<name>env</name>
					<value>prod</value>
				</property>
			</activation>
		</profile>
	</profiles>
	<properties>
		<spring.data.rest.version>3.0.1.RELEASE</spring.data.rest.version>
		<spring.data.jpa.version>2.0.0.RELEASE</spring.data.jpa.version>
		<logback.version>1.2.3</logback.version>
		<jcl.slf4j.version>1.7.25</jcl.slf4j.version>
		<postgres.version>9.1-901-1.jdbc4</postgres.version>
	</properties>
	<dependencies>
		<!-- https://mvnrepository.com/artifact/org.springframework.data/spring-data-rest-webmvc -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-rest-webmvc</artifactId>
			<version>${spring.data.rest.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework.data/spring-data-jpa -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>${spring.data.jpa.version}</version>
		</dependency>
		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${jcl.slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>5.2.12.Final</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.postgresql/postgresql -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.1.4</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/info.cukes/cucumber-junit -->
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>1.2.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/info.cukes/cucumber-java -->
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>1.2.5</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.glassfish.jersey.core/jersey-client -->
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<version>2.26</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.3</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.jayway.jsonpath/json-path -->
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>2.4.0</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<finalName>nn-web</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.19.1</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<parallel>classes</parallel>
					<threadCountClasses>1</threadCountClasses>
					<skipITs>false</skipITs>
					<systemPropertyVariables>
						<cucumber.options>${cucumber.options}</cucumber.options>
					</systemPropertyVariables>
					<includes>
						<include>**/Run*.java</include>
					</includes>
				</configuration>
			</plugin>
			<!-- block unit tests execution -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.23.0</version>
				<executions>
					<execution>
						<id>default-build</id>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
					<execution>
						<id>prepare-stack</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>remove-containers</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
						<configuration>
							<keepRunning>false</keepRunning>
							<keepContainer>false</keepContainer>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<images>
						<image>
							<name>nn-db</name>
							<alias>postgres</alias>
							<build>
								<dockerFileDir>${project.basedir}/src/test/resources/postgres</dockerFileDir>
							</build>
							<run>
								<namingStrategy>alias</namingStrategy>
								<hostname>${postgres.hostname}</hostname>
								<ports>
									<port>5432:5432</port>
								</ports>
								<log>
									<prefix>[POSTGRES]</prefix>
									<date>default</date>
									<color>cyan</color>
								</log>
								<wait>
									<tcp>
										<ports>
											<port>5432</port>
										</ports>
									</tcp>
									<time>30000</time>
								</wait>
							</run>
						</image>
						<image>
							<name>nn-web-wildfly</name>
							<alias>wildfly</alias>
							<build>
								<dockerFileDir>${project.basedir}/src/test/resources/wildfly</dockerFileDir>
								<assembly>
									<descriptorRef>artifact</descriptorRef>
								</assembly>
							</build>
							<run>
								<namingStrategy>alias</namingStrategy>
								<dependsOn>
									<container>postgres</container>
								</dependsOn>
								<links>
									<link>postgres:${postgres.hostname}</link>
								</links>
								<ports>
									<port>8080:8080</port>
								</ports>
								<log>
									<prefix>[WILDFLY]</prefix>
									<date>default</date>
									<color>yellow</color>
								</log>
								<wait>
									<log>Deployed\s"${project.build.finalName}\.${project.packaging}"</log>
									<time>90000</time>
								</wait>
							</run>
						</image>
					</images>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>